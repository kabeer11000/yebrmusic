{
  "version": 3,
  "sources": [
    "components/SongCard/SongCard.js",
    "components/SongCard2/SongCard2.js",
    "../node_modules/@material-ui/icons/esm/QueueMusic.js",
    "components/TrendingArtists/TrendingArtists.js"
  ],
  "names": [
    "SongCard",
    "song",
    "props",
    "className",
    "disableRipple",
    "style",
    "width",
    "backgroundColor",
    "elevation",
    "component",
    "alt",
    "snippet",
    "title",
    "height",
    "onError",
    "e",
    "target",
    "onerror",
    "src",
    "image",
    "thumbnails",
    "high",
    "url",
    "loading",
    "hidden",
    "playlist",
    "position",
    "opacity",
    "top",
    "display",
    "color",
    "bottom",
    "right",
    "marginLeft",
    "gutterBottom",
    "variant",
    "primary",
    "secondary",
    "channelTitle",
    "defaultProps",
    "React",
    "memo",
    "SongCard2",
    "str",
    "video_",
    "video",
    "maxWidth",
    "onClick",
    "onPlay",
    "maxHeight",
    "objectFit",
    "thumbnail",
    "replace",
    "slice",
    "createSvgIcon",
    "createElement",
    "d",
    "TrendingArtists",
    "useState",
    "state",
    "setState",
    "error",
    "setError",
    "token",
    "useContext",
    "AccountContext",
    "useEffect",
    "b",
    "a",
    "comlinkWorker",
    "fetch",
    "endPoints",
    "getTrendingArtistsRanked",
    "headers",
    "get",
    "storageIndex",
    "trendingArtists",
    "saveObject",
    "Date",
    "now",
    "timeObject",
    "saved",
    "etag",
    "set",
    "PlaySong",
    "PlayContext",
    "isTv",
    "isTvContext",
    "marginTop",
    "marginBottom",
    "artists",
    "map",
    "artist",
    "playListIndex",
    "Fragment",
    "key",
    "in",
    "accounts",
    "Link",
    "to",
    "split",
    "pop",
    "container",
    "spacing",
    "items",
    "index",
    "item",
    "xs",
    "sm",
    "md",
    "xl",
    "lg",
    "getSong",
    "id",
    "list",
    "useProxy",
    "songURI",
    "playList",
    "left",
    "transform"
  ],
  "mappings": "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",
  "file": "static/js/8.2ab1b1c5.chunk.js",
  "sourcesContent": [
    "import React from \"react\";\nimport \"./SongCard.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {IconButton, Typography} from \"@material-ui/core\";\n// import Grow from \"@material-ui/core/Grow\";\n// import {FocusNode} from \"@please/lrud\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PropTypes from \"prop-types\";\nimport {QueueMusic} from \"@material-ui/icons\";\n\nconst SongCard = ({song, ...props}) => (\n\t<>\n\t\t{/*<Grow in={true}>*/}\n\t\t<Card className={\"SongCard\"} disableRipple style={{width: \"18rem\", backgroundColor: \"transparent\"}}\n\t\t\t  elevation={0}\n\t\t\t  {...props}>\n\t\t\t{/*<FocusNode>*/}\n\t\t\t<CardActionArea>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tcomponent={\"img\"}\n\t\t\t\t\t\talt={song.snippet.title}\n\t\t\t\t\t\theight=\"140\"\n\t\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\t\te.target.src = \"./assets/icons/darkmode_nothingfound.svg\";\n\t\t\t\t\t\t}}\n\t\t\t\t\t\timage={song.snippet.thumbnails.high.url}\n\t\t\t\t\t\ttitle={song.snippet.title}\n\t\t\t\t\t\tloading={\"lazy\"}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<div hidden={!props.playlist} style={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tbackgroundColor: \"#000000\",\n\t\t\t\t\topacity: \"30%\",\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t}}/>\n\t\t\t\t<IconButton color={\"#FFFFFF\"} hidden={!props.playlist} style={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tbottom: \"0.5rem\",\n\t\t\t\t\tright: \"0.5rem\",\n\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t}}>\n\t\t\t\t\t<QueueMusic style={{color: \"#FFF\"}}/>\n\t\t\t\t</IconButton>\n\t\t\t</CardActionArea>\n\t\t\t<CardContent className={\"text-left mb-0 pb-0\"} style={{\n\t\t\t\tmarginLeft: \"-1rem\"\n\t\t\t}}>\n\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"p\" className={\"text-truncate\"}>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tprimary={<div className={\"text-truncate\"}>{song.snippet.title}</div>}\n\t\t\t\t\t\tsecondary={song.snippet.channelTitle}/>\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t{/*</FocusNode>*/}\n\t\t</Card>\n\t\t{/*</Grow>*/}\n\t</>\n);\n\nSongCard.propTypes = {\n\tsong: PropTypes.object.isRequired,\n\tonClick: PropTypes.func.isRequired,\n\tplaylist: PropTypes.any\n};\n\nSongCard.defaultProps = {};\n\nexport default React.memo(SongCard);\n",
    "import React from \"react\";\nimport \"./SongCard2.css\";\n// import Grow from \"@material-ui/core/Grow\";\nimport Card from \"@material-ui/core/Card\";\nimport {FocusNode} from \"@please/lrud\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {IconButton, Typography} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {QueueMusic} from \"@material-ui/icons\";\n\nconst unEntity = (str) => str.replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\nconst SongCard2 = (props) => {\n\tconst video_ = props.video.snippet;\n\treturn (\n\t\t// <Grow in={true}>\n\t\t<Card className={\"SongCard\"} disableRipple\n\t\t\t  style={{\n\t\t\t\t  width: \"100%\", backgroundColor: \"transparent\", /*maxWidth: \"12rem\"*/\n\t\t\t\t  maxWidth: \"auto\",\n\t\t\t  }}\n\t\t\t  elevation={0}\n\t\t\t  onClick={props.onPlay}>\n\t\t\t<FocusNode>\n\t\t\t\t<CardActionArea>\n\t\t\t\t\t<Card className={\"py-0 my-0\"}>\n\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\tcomponent={\"img\"}\n\t\t\t\t\t\t\t\talt={video_.title}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\tmaxHeight: \"auto\",\n\t\t\t\t\t\t\t\t\tmaxWidth: \"auto\",\n\t\t\t\t\t\t\t\t\tobjectFit: \"cover\"\n\t\t\t\t\t\t\t\t\t// resize:\"both\",\n\t\t\t\t\t\t\t\t\t// objectFit: \"contain\"\n\t\t\t\t\t\t\t\t\t// maxWidth: \"12rem\",\n\t\t\t\t\t\t\t\t\t// maxHeight: \"12rem\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\t\t\t\te.target.src = \"./assets/icons/darkmode_nothingfound.svg\";\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\timage={props.thumbnail || video_.thumbnails.high.url}\n\t\t\t\t\t\t\t\ttitle={unEntity(video_.title)}\n\t\t\t\t\t\t\t\tloading={\"lazy\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<div hidden={!props.playlist} style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbackgroundColor: \"#000000\",\n\t\t\t\t\t\topacity: \"30%\",\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t\t}}/>\n\t\t\t\t\t<IconButton color={\"#FFFFFF\"} hidden={!props.playlist} style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbottom: \"0.5rem\",\n\t\t\t\t\t\tright: \"0.5rem\",\n\t\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<QueueMusic style={{color: \"#FFF\"}}/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</CardActionArea>\n\t\t\t\t<CardContent className={\"text-left pt-0\"} style={{\n\t\t\t\t\tmarginLeft: \"-1rem\",\n\t\t\t\t}}>\n\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"p\" className={\"text-truncate\"}>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary={<div className={\"text-truncate\"}>{video_.title.slice(0, 70) + \" ...\"}</div>}\n\t\t\t\t\t\t\tsecondary={video_.channelTitle}/>\n\t\t\t\t\t\t{/*{video_.title.slice(0, 70) + \" ...\"}*/}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/*<Typography variant=\"body2\" color=\"textSecondary\" style={{textDecoration: \"none\"}}*/}\n\t\t\t\t\t{/*\t\t\tcomponent={Link} to={`/artist?id=${video_.channelId}`}*/}\n\t\t\t\t\t{/*\t\t\tclassName={\"text-truncate\"}>*/}\n\t\t\t\t\t{/*\t/!*{video_.description ? video_.description.slice(0, 70) + \" ...\" : \"\"}*!/*/}\n\t\t\t\t\t{/*\t<span className={\"text-muted text-truncate\"}>*/}\n\t\t\t\t\t{/*\t\t{video_.channelTitle}*/}\n\t\t\t\t\t{/*\t</span>*/}\n\t\t\t\t\t{/*</Typography>*/}\n\t\t\t\t</CardContent>\n\t\t\t</FocusNode>\n\t\t</Card>\n\t\t// </Grow>\n\t);\n};\nSongCard2.propTypes = {};\n\nSongCard2.defaultProps = {};\n\nexport default React.memo(SongCard2);\n",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z\"\n}), 'QueueMusic');",
    "import React from \"react\";\nimport \"./TrendingArtists.css\";\nimport {Container, IconButton} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SongCard2 from \"../SongCard2/SongCard2\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {AccountContext, isTvContext, PlayContext} from \"../../Contexts\";\nimport {getSong} from \"../../functions/SongsUtility\";\nimport endPoints from \"../../api/EndPoints/EndPoints\";\nimport {comLinkWorker as comlinkWorker} from \"../../functions/Worker/worker-export\";\nimport SongCard from \"../SongCard/SongCard\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport {get, set} from \"idb-keyval\";\nimport {storageIndex} from \"../../functions/Helper/StorageIndex\";\n\n\n// Trending PL-DfNcB3lim9L-rrvhrR3AoFB9Sa-KoxW\nconst TrendingArtists = () => {\n\tconst [state, setState] = React.useState(null);\n\tconst [error, setError] = React.useState(false);\n\n\tconst {token} = React.useContext(AccountContext);\n\tReact.useEffect(() => {\n\t\tconst b = async () => comlinkWorker.fetch(endPoints.getTrendingArtistsRanked, {\n\t\t\theaders: {\"Authorization\": `Bearer ${token}`}\n\t\t});\n\t\tconst a = async () => {\n\t\t\ttry {\n\t\t\t\tif (!await get(storageIndex.trendingArtists.saveObject) || !(Date.now() - await get(storageIndex.trendingArtists.timeObject)) / (100 * 60) > 1) {\n\t\t\t\t\tsetState(await b());\n\t\t\t\t} else setState(await get(storageIndex.trendingArtists.saveObject));\n\t\t\t} catch (e) {\n\t\t\t\tsetError(!error);\n\t\t\t}\n\t\t};\n\t\ta();\n\t}, []);\n\tReact.useEffect(() => {\n\t\tconst a = async () => {\n\t\t\tif (!state) return;\n\t\t\tconst saved = await get(storageIndex.trendingArtists.saveObject);\n\t\t\tif (!saved || saved.etag !== state.etag) {\n\t\t\t\tawait set(storageIndex.trendingArtists.timeObject, Date.now());\n\t\t\t\tawait set(storageIndex.trendingArtists.saveObject, state);\n\t\t\t}\n\t\t};\n\t\ta();\n\t}, [state]);\n\tconst {PlaySong} = React.useContext(PlayContext);\n\tconst isTv = React.useContext(isTvContext);\n\n\treturn (\n\t\t<div className=\"TrendingArtists\">\n\t\t\t<div className=\"Discover\" style={{\n\t\t\t\tmarginTop: \"5rem\",\n\t\t\t\tmarginBottom: \"3rem\"\n\t\t\t}}>\n\t\t\t\t{state && state.artists ? state.artists.map((artist, playListIndex) => <React.Fragment\n\t\t\t\t\tkey={playListIndex}>\n\t\t\t\t\t<Grow in={true}>\n\t\t\t\t\t\t<Typography variant={\"h5\"} className={\"mb-3 mt-2 pl-3 text-left text-truncate\"}>\n\t\t\t\t\t\t\t{artist.title} {artist.accounts[0] && <IconButton component={Link}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  to={`/artist/${artist.accounts[0].url.split(\"/\").pop()}`}><Avatar\n\t\t\t\t\t\t\tsrc={artist.accounts[0].image}/></IconButton>}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grow>\n\t\t\t\t\t<Container maxWidth=\"xl\" className={\"mb-0 pb-0\"}>\n\t\t\t\t\t\t{isTv ? <Grid container spacing={2}>\n\t\t\t\t\t\t\t{artist.items.slice(0, 4).map((song, index) => (\n\t\t\t\t\t\t\t\t<Grid key={index} item xs={6} sm={6} md={4} xl={3} lg={3}>\n\t\t\t\t\t\t\t\t\t<SongCard\n\t\t\t\t\t\t\t\t\t\tsong={artist.items[index]}\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tconst song = artist.items[index];\n\t\t\t\t\t\t\t\t\t\t\tawait PlaySong({\n\t\t\t\t\t\t\t\t\t\t\t\tuseProxy: true,\n\t\t\t\t\t\t\t\t\t\t\t\tsongURI: await getSong(song.id),\n\t\t\t\t\t\t\t\t\t\t\t\tsong: song,\n\t\t\t\t\t\t\t\t\t\t\t\tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlist: artist,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaylist={true}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid> : <Grid container spacing={2}>\n\t\t\t\t\t\t\t{artist.items.slice(0, 4).map((song, index) => (\n\t\t\t\t\t\t\t\t<Grid key={index}\n\t\t\t\t\t\t\t\t\t  item xs={6}\n\t\t\t\t\t\t\t\t\t  sm={2}>\n\t\t\t\t\t\t\t\t\t<SongCard2\n\t\t\t\t\t\t\t\t\t\tvideo={artist.items[index]}\n\t\t\t\t\t\t\t\t\t\tonPlay={async () => {\n\t\t\t\t\t\t\t\t\t\t\tconst song = artist.items[index];\n\t\t\t\t\t\t\t\t\t\t\tawait PlaySong({\n\t\t\t\t\t\t\t\t\t\t\t\tuseProxy: true,\n\t\t\t\t\t\t\t\t\t\t\t\tsongURI: await getSong(song.id),\n\t\t\t\t\t\t\t\t\t\t\t\tsong: song,\n\t\t\t\t\t\t\t\t\t\t\t\tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlist: artist,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaylist={true}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>}\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Divider/>\n\t\t\t\t</React.Fragment>) : null\n\t\t\t\t}\n\t\t\t\t{error ? <div className=\"Preloader text-center\" style={{\n\t\t\t\t\twidth: \"10rem\",\n\t\t\t\t\theight: \"10rem\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\"\n\t\t\t\t}}>\n\t\t\t\t\t<img src={\"./assets/icons/darkmode_nothingfound.svg\"} style={{width: \"8rem\", height: \"auto\"}}\n\t\t\t\t\t\t alt={\"Kabeers Music Logo\"}/>\n\n\t\t\t\t</div> : null}\n\n\t\t\t\t{/*<Grid container spacing={2}>*/}\n\t\t\t\t{/*    {state && state.artists ? state.artists.map((artist, index) => <Grid key={index} item xs={6}*/}\n\t\t\t\t{/*                                                                         sm={2}><SongCard2*/}\n\t\t\t\t{/*        video={artist.items[0]} onPlay={() => {*/}\n\t\t\t\t{/*    }} playlist={true}/></Grid>) : null}*/}\n\t\t\t\t{/*</Grid>*/}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nTrendingArtists.propTypes = {};\n\nTrendingArtists.defaultProps = {};\n\nexport default TrendingArtists;\n"
  ],
  "sourceRoot": ""
}
