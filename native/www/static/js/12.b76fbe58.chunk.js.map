{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/icons/esm/ArrowBack.js",
    "functions/Helper/XMLToJSON.js",
    "functions/Search.js",
    "../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js",
    "components/SkeletonList/SkeletonList.js",
    "components/SearchComponent/SearchResultComponent.js"
  ],
  "names": [
    "createSvgIcon",
    "React",
    "createElement",
    "d",
    "xml2json",
    "xml",
    "a",
    "obj",
    "nodeType",
    "attributes",
    "length",
    "j",
    "attribute",
    "item",
    "nodeName",
    "nodeValue",
    "textNodes",
    "slice",
    "call",
    "childNodes",
    "filter",
    "node",
    "hasChildNodes",
    "reduce",
    "text",
    "i",
    "push",
    "old",
    "SuggestSearch",
    "q",
    "comLinkWorker",
    "fetchText",
    "endPoints",
    "getSuggestionFake",
    "response",
    "DOMParser",
    "parseFromString",
    "toString",
    "xmlDoc",
    "toplevel",
    "CompleteSuggestion",
    "SearchYoutube",
    "token",
    "window",
    "__kn",
    "music",
    "serviceLoginToken",
    "fetch",
    "searchYoutube",
    "headers",
    "Skeleton",
    "props",
    "ref",
    "_props$animation",
    "animation",
    "classes",
    "className",
    "_props$component",
    "component",
    "Component",
    "height",
    "_props$variant",
    "variant",
    "width",
    "other",
    "_objectWithoutProperties",
    "hasChildren",
    "Boolean",
    "children",
    "_extends",
    "clsx",
    "root",
    "withChildren",
    "fitContent",
    "heightAuto",
    "style",
    "withStyles",
    "theme",
    "display",
    "backgroundColor",
    "fade",
    "palette",
    "primary",
    "type",
    "marginTop",
    "marginBottom",
    "transformOrigin",
    "transform",
    "borderRadius",
    "shape",
    "content",
    "rect",
    "circle",
    "pulse",
    "opacity",
    "wave",
    "position",
    "overflow",
    "background",
    "concat",
    "action",
    "hover",
    "bottom",
    "left",
    "right",
    "top",
    "visibility",
    "maxWidth",
    "name",
    "SkeletonList",
    "List",
    "Array",
    "map",
    "value",
    "ListItem",
    "alignItems",
    "ListItemAvatar",
    "ListItemText",
    "secondary",
    "defaultProps",
    "pure",
    "useStyles",
    "makeStyles",
    "padding",
    "input",
    "marginLeft",
    "spacing",
    "flex",
    "iconButton",
    "divider",
    "margin",
    "SearchResultComponent",
    "history",
    "useHistory",
    "useState",
    "open",
    "setOpen",
    "listItems",
    "setListItems",
    "PlaySong",
    "useContext",
    "PlayContext",
    "abortController",
    "AbortController",
    "SearchContext",
    "query",
    "online",
    "useNetwork",
    "useEffect",
    "SessionRecommendation",
    "addSearch",
    "navigator",
    "onLine",
    "then",
    "SuggestOfflineSongs",
    "accounts",
    "etag",
    "items",
    "kind",
    "pageInfo",
    "totalResults",
    "regionCode",
    "title",
    "Log",
    "abort",
    "Dialog",
    "fullScreen",
    "AppBar",
    "Toolbar",
    "Link",
    "to",
    "textDecoration",
    "IconButton",
    "onClick",
    "color",
    "ArrowBack",
    "InputBase",
    "autoCapitalize",
    "autoComplete",
    "placeholder",
    "inputProps",
    "Fragment",
    "index",
    "button",
    "key",
    "url",
    "split",
    "ListItemIcon",
    "Avatar",
    "alt",
    "src",
    "image",
    "subCountLabel",
    "Divider",
    "song",
    "console",
    "log",
    "result",
    "useProxy",
    "songURI",
    "URL",
    "createObjectURL",
    "blobs",
    "audio",
    "others",
    "offline",
    "playList",
    "list",
    "getSong",
    "id",
    "snippet",
    "thumbnails",
    "high",
    "channelTitle",
    "videoElement",
    "memo"
  ],
  "mappings": "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",
  "file": "static/js/12.b76fbe58.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');",
    "/**\n * Changes XML to JSON\n * Modified version from here: http://davidwalsh.name/convert-xml-json\n * @param {string} xml XML DOM tree\n */\nimport {comLinkWorker} from \"../Worker/worker-export\";\nimport * as comlink from \"comlink\"\n// export default async function xml2json(xml) {\n//     return await comLinkWorker.utils.XML2JSON(comlink.proxy(xml));\n// }\nexport default async function xml2json(xml) {\n    // Create the return object\n    var obj = {};\n\n    if (xml.nodeType === 1) {\n        // element\n        // do attributes\n        if (xml.attributes.length > 0) {\n            obj[\"attributes\"] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                obj[\"attributes\"][attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    } else if (xml.nodeType === 3) {\n        // text\n        obj = xml.nodeValue;\n    }\n\n    // do children\n    // If all text nodes inside, get concatenated text from them.\n    var textNodes = [].slice.call(xml.childNodes).filter(function (node) {\n        return node.nodeType === 3;\n    });\n    if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\n        obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\n            return text + node.nodeValue;\n        }, \"\");\n    } else if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n            var item = xml.childNodes.item(i);\n            var nodeName = item.nodeName;\n            if (typeof obj[nodeName] == \"undefined\") {\n                obj[nodeName] = await xml2json(item);\n            } else {\n                if (typeof obj[nodeName].push == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(await xml2json(item));\n            }\n        }\n    }\n    return obj;\n}\n",
    "import endPoints from \"../api/EndPoints/EndPoints\";\nimport xml2json from \"./Helper/XMLToJSON\";\nimport {comLinkWorker} from \"./Worker/worker-export\";\n\nexport const SuggestSearch = async (q, ...args) => {\n    const response = await comLinkWorker.fetchText(endPoints.getSuggestionFake(q)); //.then(r => r.text());\n    const xmlDoc = await xml2json(new DOMParser().parseFromString(response.toString(), \"text/xml\"));\n    return xmlDoc.toplevel ? (xmlDoc.toplevel).CompleteSuggestion : [];\n};\n\nexport const SearchYoutube = async (q, ...args) => {\n    const token = window.__kn.music.serviceLoginToken;\n    return await comLinkWorker.fetch(endPoints.searchYoutube(q), {\n        headers:{\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        // signal: abortController.signal\n    });\n};\n",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);",
    "import React from \"react\";\nimport \"./SkeletonList.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {pure} from \"recompose\";\n\nconst SkeletonList = (props = 8) => (\n\t<List>\n\t\t{\n\t\t\t[...Array(props.length)].map(value => (\n\t\t\t\t<ListItem alignItems=\"flex-start\">\n\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t<Skeleton variant={\"circle\"} style={{height: \"2.5rem\", width: \"2.5rem\"}}/>\n\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t<Skeleton/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t<Skeleton width={\"100%\"}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</ListItem>\n\t\t\t))\n\t\t}\n\t</List>\n);\n\nSkeletonList.propTypes = {};\n\nSkeletonList.defaultProps = {};\n\nexport default pure(SkeletonList);\n",
    "import React from \"react\";\nimport \"./SearchComponent.css\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {SearchYoutube} from \"../../functions/Search\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {getSong, SuggestOfflineSongs} from \"../../functions/SongsUtility\";\nimport {Slide} from \"@material-ui/core\";\nimport SkeletonList from \"../SkeletonList/SkeletonList\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {PlayContext, SearchContext} from \"../../Contexts\";\nimport SessionRecommendation from \"../../functions/SessionRecommendation\";\nimport {useNetwork} from \"../../Hooks\";\nimport Log from \"../../functions/Log\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginTop: \"1rem\",\n\t\tpadding: \"2px 4px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\twidth: \"100%\",\n\t},\n\tinput: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\ticonButton: {\n\t\tpadding: 10,\n\t},\n\tdivider: {\n\t\theight: 28,\n\t\tmargin: 4,\n\t},\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nconst SearchResultComponent = () => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\n\tconst [open, setOpen] = React.useState(true);\n\tconst [listItems, setListItems] = React.useState(null);\n\tconst {PlaySong} = React.useContext(PlayContext);\n\n\tconst abortController = new AbortController();\n\tconst [query] = React.useContext(SearchContext);\n\n\t// const errorPage = (message = \"No Internet Connection\", button = <Button component={Link}\n\t//                                                                         to={\"/search\"}>Retry</Button>) => (\n\t//     <div className={\"errorPage text-center\"}\n\t//          style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\n\t//         <img src={\"/./assets/icons/darkmode_nothingfound.svg\"} style={{width: \"8rem\", height: \"auto\"}}\n\t//              alt={\"Kabeers Music Logo\"}/>\n\t//         <br/>\n\t//         <div className={\"text-truncate\"}>{message}</div>\n\t//         {button}\n\t//     </div>\n\t// );\n\n\tconst online = useNetwork();\n\tReact.useEffect(() => {\n\t\tif (!query) return history.push(\"/search\");\n\t\tSessionRecommendation.addSearch(query);\n\t\tif (navigator.onLine) SearchYoutube(query, abortController).then(setListItems);\n\t\telse SuggestOfflineSongs(query).then(a => {\n\t\t\tsetListItems({\n\t\t\t\taccounts: [],\n\t\t\t\tetag: \"b78bc54f-dd76-4ed9-ae0e-fab7e11a5336\",\n\t\t\t\titems: a,\n\t\t\t\tkind: \"KabeersMusic#searchListResponse\",\n\t\t\t\tpageInfo: {totalResults: a.length},\n\t\t\t\tregionCode: \"PK\",\n\t\t\t\ttitle: query,\n\t\t\t});\n\t\t\tLog(a);\n\t\t});\n\t\treturn () => abortController.abort();\n\t}, [online]);\n\treturn (\n\t\t<div className=\"SearchResultComponent\">\n\t\t\t<Dialog fullScreen open={open}>\n\t\t\t\t<AppBar className={\"fixed-top\"}>\n\t\t\t\t\t<Toolbar component={Link} to={`/search?q=${query}`} style={{textDecoration: \"none\"}}>\n\t\t\t\t\t\t{window.history ?\n\t\t\t\t\t\t\t<IconButton onClick={() => setOpen(false)} component={Link} style={{textDecoration: \"none\"}}\n\t\t\t\t\t\t\t\t\t\tto={\"/home\"} color=\"primary.light\"\n\t\t\t\t\t\t\t\t\t\tvisibility={false}>\n\t\t\t\t\t\t\t\t<ArrowBack/>\n\t\t\t\t\t\t\t</IconButton> : null}\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tautoCapitalize={true}\n\t\t\t\t\t\t\tautoComplete={true}\n\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\tclassName={`${classes.input} text-light`}\n\t\t\t\t\t\t\tplaceholder=\"Search Yebr\"\n\t\t\t\t\t\t\tinputProps={{\"aria-label\": \"Search Yebr\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={\"container px-3\"} style={{marginTop: \"4rem\"}}>\n\t\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t\t{listItems && listItems.items ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{listItems.accounts.length ? (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t{listItems.accounts.map((value, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<ListItem component={Link} button key={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  to={`/artist/${value.url.split(\"/\").slice(-1)[0]}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar alt={value.title} src={value.image}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={`${value.title}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  secondary={value.subCountLabel ? `${value.subCountLabel} Listeners` : \"\"}/>\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t<Divider/>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t{listItems.items.length ? (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t{listItems.items.map((song, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<ListItem button key={index} onClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(listItems.items.map(result => result.item));\n\t\t\t\t\t\t\t\t\t\t\t\tif (!online) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// song.item.videoElement.snippet.thumbnails.high.url = URL.createObjectURL(song.item.blobs.thumbnail)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn PlaySong({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuseProxy: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsongURI: URL.createObjectURL(song.item.blobs.audio),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsong: song.item,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tothers: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffline: true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist: ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...listItems,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titems: listItems.items.map(result => result.item),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn PlaySong({\n\t\t\t\t\t\t\t\t\t\t\t\t\tuseProxy: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsongURI: await getSong(song.id),\n\t\t\t\t\t\t\t\t\t\t\t\t\tsong: song,\n\t\t\t\t\t\t\t\t\t\t\t\t\tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist: listItems,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t// a({\n\t\t\t\t\t\t\t\t\t\t\t\t// \tuseProxy: false,\n\t\t\t\t\t\t\t\t\t\t\t\t// \tsongURI: URL.createObjectURL(data.blobs.audio),\n\t\t\t\t\t\t\t\t\t\t\t\t// \tsong: data.videoElement,\n\t\t\t\t\t\t\t\t\t\t\t\t// \tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\t...playState.playList,\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tindex: index\n\t\t\t\t\t\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\t\t\t\t// await PlaySong(value, {\n\t\t\t\t\t\t\t\t\t\t\t\t// \tlist: listItems, index: index\n\t\t\t\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t{!online ? <React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar alt={song.item.videoElement.snippet.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={song.item.videoElement.snippet.thumbnails.high.url}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={`${song.item.videoElement.snippet.title}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  secondary={`${song.item.videoElement.snippet.channelTitle}`}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment> : <React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar alt={song.snippet.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={song.snippet.thumbnails.high.url}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={`${song.snippet.title}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  secondary={`${song.snippet.channelTitle}`}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>}\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : <SkeletonList length={10}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nSearchResultComponent.propTypes = {};\n\nSearchResultComponent.defaultProps = {};\n\nexport default React.memo(SearchResultComponent);\n"
  ],
  "sourceRoot": ""
}
