{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/icons/esm/ArrowBack.js",
    "../node_modules/@material-ui/icons/esm/Search.js",
    "../node_modules/@material-ui/icons/esm/Menu.js",
    "components/HideOnScroll/HideOnScroll.js",
    "components/CustomAppBar/CustomAppBar.js"
  ],
  "names": [
    "createSvgIcon",
    "React",
    "createElement",
    "d",
    "HideOnScroll",
    "props",
    "direction",
    "appear",
    "children",
    "window",
    "trigger",
    "useScrollTrigger",
    "target",
    "undefined",
    "Slide",
    "in",
    "defaultProps",
    "pure",
    "useStyles",
    "makeStyles",
    "theme",
    "appBar",
    "width",
    "marginLeft",
    "root",
    "padding",
    "display",
    "alignItems",
    "input",
    "spacing",
    "flex",
    "iconButton",
    "divider",
    "height",
    "margin",
    "CustomAppBar",
    "useContext",
    "DrawerContext",
    "drawer",
    "setDrawer",
    "tv",
    "isTvContext",
    "classes",
    "LoadingContext",
    "loading",
    "history",
    "useHistory",
    "userInfo",
    "AccountContext",
    "account",
    "AccountChooserContext",
    "dialog",
    "open",
    "setOpen",
    "Fragment",
    "style",
    "zIndex",
    "hidden",
    "className",
    "LinearProgress",
    "AppBar",
    "position",
    "elevation",
    "Toolbar",
    "justifyContent",
    "Avatar",
    "src",
    "Typography",
    "color",
    "variant",
    "Button",
    "component",
    "Link",
    "to",
    "IconButton",
    "Search",
    "Paper",
    "onClick",
    "ArrowBack",
    "Menu",
    "InputBase",
    "readOnly",
    "push",
    "placeholder",
    "inputProps",
    "Divider",
    "orientation",
    "account_image",
    "location",
    "href",
    "memo"
  ],
  "mappings": "kGAAA,oBAEeA,gBAAcC,UAAMC,cAAc,OAAQ,CACvDC,EAAG,iEACD,c,6ECJJ,oBAEeH,gBAAcC,UAAMC,cAAc,OAAQ,CACvDC,EAAG,+OACD,W,0HCFWH,cAAcC,UAAMC,cAAc,OAAQ,CACvDC,EAAG,kDACD,Q,8ECGEC,EAAe,WAA2D,IAA1DC,EAAyD,kFAA7CA,GAA6C,IAAtCC,UAAW,OAAQC,QAAQ,IAC5DC,EAAoBH,EAApBG,SAAUC,EAAUJ,EAAVI,OAIXC,EAAUC,YAAiB,CAACC,OAAQH,EAASA,SAAWI,IAE9D,OACC,wBAACC,EAAA,EAAD,CAAOP,OAAQF,EAAME,OAAQD,UAAWD,EAAMC,UAAWS,IAAKL,GAC5DF,IAcJJ,EAAaY,aAAe,GAEbC,kBAAKb,G,6DCddc,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,OAAQ,CACPC,MAAO,sBACPC,WAAY,UAEbC,KAAM,CACLC,QAAS,UACTC,QAAS,OACTC,WAAY,SACZL,MAAO,QAERM,MAAO,CACNL,WAAYH,EAAMS,QAAQ,GAC1BC,KAAM,GAEPC,WAAY,CACXN,QAAS,IAEVO,QAAS,CACRC,OAAQ,GACRC,OAAQ,OAGJC,EAAe,WACpB,MAA4BlC,UAAMmC,WAAWC,KAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAKvC,UAAMmC,WAAWK,KACtBC,EAAUxB,IAChB,EAAkBjB,UAAMmC,WAAWO,KAA5BC,EAAP,oBACMC,EAAUC,cACAC,EAAY9C,UAAMmC,WAAWY,KAAtCC,QACP,cAAwBhD,UAAMmC,WAAWc,KAAuBC,OAAhE,GAAOC,EAAP,KAAaC,EAAb,KAEA,OAAOb,EAEL,wBAAC,UAAMc,SAAP,KACC,+BAAKC,MAAO,CAACC,OAAQ,SAAUC,QAASb,EAASc,UAAW,aAC3D,wBAACC,EAAA,EAAD,OAED,wBAACC,EAAA,EAAD,CAAQC,SAAS,SAASH,UAAW,mCAAoCI,UAAW,GACnF,wBAACC,EAAA,EAAD,CAASR,MAAO,CAACjC,MAAO,OAAQI,QAAS,cAAesC,eAAgB,kBACvE,+BAAKN,UAAW,iBACf,wBAACO,EAAA,EAAD,CAAQC,IAAK,mCACb,wBAACC,EAAA,EAAD,CAAYC,MAAO,cAAeC,QAAS,SAAUX,UAAW,QAAhE,SAID,+BAAKH,MAAO,CAACjC,MAAO,OAAQI,QAAS,cAAesC,eAAgB,WACnE,wBAACM,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,SAA7B,QACA,wBAACH,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,aAA7B,YAEA,wBAACH,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,cAA7B,aACA,wBAACH,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,YAA7B,YAED,+BAAKf,UAAW,UACf,wBAACgB,EAAA,EAAD,CAAYH,UAAWC,IAAMC,GAAI,WAChC,wBAACE,EAAA,EAAD,WAWL,wBAAC,EAAD,KACC,wBAACf,EAAA,EAAD,CAAQF,UAAW,2BAA4BI,UAAW,GACzD,wBAACc,EAAA,EAAD,CAAOL,UAAU,OAAOb,UAAWhB,EAAQlB,MAC1C,wBAACkD,EAAA,EAAD,CAAYG,QAAS,kBAAMtC,GAAWD,IAASoB,UAAWhB,EAAQX,WAAY,aAAW,QACvFO,EAAS,wBAACwC,EAAA,EAAD,MAAe,wBAACC,EAAD,OAE1B,wBAACC,EAAA,EAAD,CACCC,UAAQ,EACRJ,QAAS,kBAAMhC,EAAQqC,KAAK,YAE5BxB,UAAS,wBAAmBhB,EAAQd,OACpCuD,YAAY,cACZC,WAAY,CAAC,aAAc,uBAE5B,wBAACV,EAAA,EAAD,CAAYhB,UAAWhB,EAAQX,WAAY,aAAW,SACnD8C,QAAS,kBAAMhC,EAAQqC,KAAK,aAC9B,wBAACP,EAAA,EAAD,OAED,wBAACU,EAAA,EAAD,CAASC,YAAa,WAAY5B,UAAWhB,EAAQV,UACpDe,EAAY,wBAAC2B,EAAA,EAAD,CAAYG,QAAS,kBAAMxB,GAASD,IAAOM,UAAWhB,EAAQX,YAC1E,wBAACkC,EAAA,EAAD,CAAQC,IAAKnB,EAAWA,EAASwC,cAAgB,GAC/ChC,MAAO,CAACjC,MAAO,SAAUW,OAAQ,aAClB,wBAACqC,EAAA,EAAD,CAAQO,QAAS,kBAAMpE,OAAO+E,SAASC,KAAO,0BAA9C,eAiBxBtD,EAAanB,aAAe,GAEbf,oBAAMyF,KAAKvD",
  "file": "static/js/9.0f49f2ca.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./HideOnScroll.css\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {pure} from \"recompose\";\n\nconst HideOnScroll = (props = {...props, direction: \"down\", appear: false}) => {\n\tconst {children, window} = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({target: window ? window() : undefined});\n\n\treturn (\n\t\t<Slide appear={props.appear} direction={props.direction} in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n};\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nHideOnScroll.defaultProps = {};\n\nexport default pure(HideOnScroll);\n",
    "import React from \"react\";\nimport \"./CustomAppBar.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, Menu, Search} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport HideOnScroll from \"../HideOnScroll/HideOnScroll\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {AccountChooserContext, AccountContext, DrawerContext, isTvContext, LoadingContext} from \"../../Contexts\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {Divider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\twidth: \"calc(100% - 4.5rem)\",\n\t\tmarginLeft: \"4.5rem\",\n\t},\n\troot: {\n\t\tpadding: \"2px 4px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\twidth: \"100%\",\n\t},\n\tinput: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\ticonButton: {\n\t\tpadding: 10,\n\t},\n\tdivider: {\n\t\theight: 28,\n\t\tmargin: 4,\n\t},\n}));\nconst CustomAppBar = () => {\n\tconst [drawer, setDrawer] = React.useContext(DrawerContext);\n\tconst tv = React.useContext(isTvContext);\n\tconst classes = useStyles();\n\tconst [loading] = React.useContext(LoadingContext);\n\tconst history = useHistory();\n\tconst {account: userInfo} = React.useContext(AccountContext);\n\tconst [open, setOpen] = React.useContext(AccountChooserContext).dialog;\n\n\treturn tv ?\n\t\t(\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={{zIndex: \"99999\"}} hidden={!loading} className={\"fixed-top\"}>\n\t\t\t\t\t<LinearProgress/>\n\t\t\t\t</div>\n\t\t\t\t<AppBar position=\"sticky\" className={\"bg-transparent position-relative\"} elevation={0}>\n\t\t\t\t\t<Toolbar style={{width: \"100%\", display: \"inline-flex\", justifyContent: \"space-between\"}}>\n\t\t\t\t\t\t<div className={\"d-inline-flex\"}>\n\t\t\t\t\t\t\t<Avatar src={\"./assets/icons/smallTvIcon.svg\"}/>\n\t\t\t\t\t\t\t<Typography color={\"textPrimary\"} variant={\"button\"} className={\"mt-2\"}>\n\t\t\t\t\t\t\t\tYEBR\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{width: \"100%\", display: \"inline-flex\", justifyContent: \"center\"}}>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/home\"}>HOME</Button>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/discover\"}>DISCOVER</Button>\n\t\t\t\t\t\t\t{/*<Button component={Link} to={\"/history\"}>HISTORY</Button>*/}\n\t\t\t\t\t\t\t<Button component={Link} to={\"/downloads\"}>DOWNLOADS</Button>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/artists\"}>ARTISTS</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"d-flex\"}>\n\t\t\t\t\t\t\t<IconButton component={Link} to={\"/search\"}>\n\t\t\t\t\t\t\t\t<Search/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t{/*<Divider orientation={\"vertical\"}/>*/}\n\t\t\t\t\t\t\t{/*<IconButton>*/}\n\t\t\t\t\t\t\t{/*\t<Avatar src={userInfo ? userInfo.account_image : \"\"}/>*/}\n\t\t\t\t\t\t\t{/*</IconButton>*/}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</React.Fragment>\n\t\t) : (\n\t\t\t<HideOnScroll>\n\t\t\t\t<AppBar className={\"bg-transparent px-3 py-3\"} elevation={0}>\n\t\t\t\t\t<Paper component=\"form\" className={classes.root}>\n\t\t\t\t\t\t<IconButton onClick={() => setDrawer(!drawer)} className={classes.iconButton} aria-label=\"menu\">\n\t\t\t\t\t\t\t{drawer ? <ArrowBack/> : <Menu/>}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tonClick={() => history.push(\"/search\")}\n\t\t\t\t\t\t\t// component={Link} to={\"/search\"}\n\t\t\t\t\t\t\tclassName={`text-truncate ${classes.input}`}\n\t\t\t\t\t\t\tplaceholder=\"Search Yebr\"\n\t\t\t\t\t\t\tinputProps={{\"aria-label\": \"search yebr music\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton className={classes.iconButton} aria-label=\"search\"\n\t\t\t\t\t\t\t\t\tonClick={() => history.push(\"/search\")}>\n\t\t\t\t\t\t\t<Search/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Divider orientation={\"vertical\"} className={classes.divider}/>\n\t\t\t\t\t\t{userInfo ? (<IconButton onClick={() => setOpen(!open)} className={classes.iconButton}>\n\t\t\t\t\t\t\t<Avatar src={userInfo ? userInfo.account_image : \"\"}\n\t\t\t\t\t\t\t\t\tstyle={{width: \"1.7rem\", height: \"1.7rem\"}}/>\n\t\t\t\t\t\t</IconButton>) : (<Button onClick={() => window.location.href = \"LOGIN\" + \"?prompt=password\"}>Sign\n\t\t\t\t\t\t\tIn</Button>)}\n\t\t\t\t\t\t{/*<Divider className={classes.divider} orientation=\"vertical\" />*/}\n\t\t\t\t\t\t{/*<IconButton component={Link} to={\"/settings\"} color=\"primary\" className={classes.iconButton} aria-label=\"directions\">*/}\n\t\t\t\t\t\t{/*\t<Mic />*/}\n\t\t\t\t\t\t{/*</IconButton>*/}\n\t\t\t\t\t</Paper>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t);\n};\n/*\n\t\t\t<div className={\"position-fixed w-100\"} style={{marginTop: '-5rem', zIndex: '55'}}>\n\n */\nCustomAppBar.propTypes = {};\n\nCustomAppBar.defaultProps = {};\n\nexport default React.memo(CustomAppBar);\n"
  ],
  "sourceRoot": ""
}
