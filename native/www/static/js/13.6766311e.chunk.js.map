{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/icons/esm/ArrowBack.js",
    "functions/Helper/XMLToJSON.js",
    "functions/Search.js",
    "../node_modules/@material-ui/icons/esm/SearchOutlined.js",
    "components/SearchComponent/SearchComponent.js"
  ],
  "names": [
    "createSvgIcon",
    "React",
    "createElement",
    "d",
    "xml2json",
    "xml",
    "a",
    "obj",
    "nodeType",
    "attributes",
    "length",
    "j",
    "attribute",
    "item",
    "nodeName",
    "nodeValue",
    "textNodes",
    "slice",
    "call",
    "childNodes",
    "filter",
    "node",
    "hasChildNodes",
    "reduce",
    "text",
    "i",
    "push",
    "old",
    "SuggestSearch",
    "q",
    "comLinkWorker",
    "fetchText",
    "endPoints",
    "getSuggestionFake",
    "response",
    "DOMParser",
    "parseFromString",
    "toString",
    "xmlDoc",
    "toplevel",
    "CompleteSuggestion",
    "SearchYoutube",
    "token",
    "window",
    "__kn",
    "music",
    "serviceLoginToken",
    "fetch",
    "searchYoutube",
    "headers",
    "Transition",
    "forwardRef",
    "props",
    "ref",
    "direction",
    "useStyles",
    "makeStyles",
    "theme",
    "root",
    "marginTop",
    "padding",
    "display",
    "alignItems",
    "width",
    "input",
    "marginLeft",
    "spacing",
    "flex",
    "iconButton",
    "divider",
    "height",
    "margin",
    "SearchComponent",
    "history",
    "useHistory",
    "useState",
    "open",
    "setOpen",
    "queryArray",
    "setQueryArray",
    "abortController",
    "AbortController",
    "online",
    "useNetwork",
    "className",
    "style",
    "position",
    "top",
    "left",
    "transform",
    "src",
    "alt",
    "primary",
    "secondary",
    "listItems",
    "setListItems",
    "classes",
    "useContext",
    "SearchContext",
    "query",
    "setQuery",
    "Search",
    "e",
    "key",
    "target",
    "value",
    "then",
    "v",
    "catch",
    "SuggestOfflineSongs",
    "t",
    "map",
    "suggestion",
    "data",
    "videoElement",
    "snippet",
    "title",
    "index",
    "button",
    "onClick",
    "component",
    "Link",
    "to",
    "pathname",
    "search",
    "URLSearchParams",
    "useEffect",
    "abort",
    "fullScreen",
    "TransitionComponent",
    "color",
    "visibility",
    "autoFocus",
    "onKeyUp",
    "placeholder",
    "inputProps",
    "defaultProps",
    "memo"
  ],
  "mappings": "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",
  "file": "static/js/13.6766311e.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');",
    "/**\n * Changes XML to JSON\n * Modified version from here: http://davidwalsh.name/convert-xml-json\n * @param {string} xml XML DOM tree\n */\nimport {comLinkWorker} from \"../Worker/worker-export\";\nimport * as comlink from \"comlink\"\n// export default async function xml2json(xml) {\n//     return await comLinkWorker.utils.XML2JSON(comlink.proxy(xml));\n// }\nexport default async function xml2json(xml) {\n    // Create the return object\n    var obj = {};\n\n    if (xml.nodeType === 1) {\n        // element\n        // do attributes\n        if (xml.attributes.length > 0) {\n            obj[\"attributes\"] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                obj[\"attributes\"][attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    } else if (xml.nodeType === 3) {\n        // text\n        obj = xml.nodeValue;\n    }\n\n    // do children\n    // If all text nodes inside, get concatenated text from them.\n    var textNodes = [].slice.call(xml.childNodes).filter(function (node) {\n        return node.nodeType === 3;\n    });\n    if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\n        obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\n            return text + node.nodeValue;\n        }, \"\");\n    } else if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n            var item = xml.childNodes.item(i);\n            var nodeName = item.nodeName;\n            if (typeof obj[nodeName] == \"undefined\") {\n                obj[nodeName] = await xml2json(item);\n            } else {\n                if (typeof obj[nodeName].push == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(await xml2json(item));\n            }\n        }\n    }\n    return obj;\n}\n",
    "import endPoints from \"../api/EndPoints/EndPoints\";\nimport xml2json from \"./Helper/XMLToJSON\";\nimport {comLinkWorker} from \"./Worker/worker-export\";\n\nexport const SuggestSearch = async (q, ...args) => {\n    const response = await comLinkWorker.fetchText(endPoints.getSuggestionFake(q)); //.then(r => r.text());\n    const xmlDoc = await xml2json(new DOMParser().parseFromString(response.toString(), \"text/xml\"));\n    return xmlDoc.toplevel ? (xmlDoc.toplevel).CompleteSuggestion : [];\n};\n\nexport const SearchYoutube = async (q, ...args) => {\n    const token = window.__kn.music.serviceLoginToken;\n    return await comLinkWorker.fetch(endPoints.searchYoutube(q), {\n        headers:{\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        // signal: abortController.signal\n    });\n};\n",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'SearchOutlined');",
    "import React from \"react\";\nimport \"./SearchComponent.css\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, SearchOutlined} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {SuggestSearch} from \"../../functions/Search\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {SuggestOfflineSongs} from \"../../functions/SongsUtility\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {Slide} from \"@material-ui/core\";\nimport {SearchContext} from \"../../Contexts\";\nimport {useNetwork} from \"../../Hooks\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginTop: \"1rem\",\n\t\tpadding: \"2px 4px\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\twidth: \"100%\",\n\t},\n\tinput: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\ticonButton: {\n\t\tpadding: 10,\n\t},\n\tdivider: {\n\t\theight: 28,\n\t\tmargin: 4,\n\t},\n}));\n\nconst SearchComponent = (props) => {\n\tlet history = useHistory();\n\tconst [open, setOpen] = React.useState(true);\n\tconst [queryArray, setQueryArray] = React.useState([]);\n\tconst abortController = new AbortController();\n\tconst online = useNetwork();\n\tconst [listItems, setListItems] = React.useState(\n\t\t<div className={\"errorPage text-center w-100\"}\n\t\t\t style={{\n\t\t\t\t position: \"absolute\",\n\t\t\t\t top: \"50%\",\n\t\t\t\t left: \"50%\",\n\t\t\t\t transform: \"translate(-50%, -50%)\"\n\t\t\t }}>\n\t\t\t<img src={\"./assets/icons/darkmode_nothingfound.svg\"} style={{width: \"8rem\", height: \"auto\"}}\n\t\t\t\t alt={\"Kabeers Music Logo\"}/>\n\t\t\t<br/>\n\t\t\t<ListItemText primary={online ? \"Searching Kabeer's Music\" : \"Searching In Downloads\"}\n\t\t\t\t\t\t  secondary={\"Results will appear as you type\"}/>\n\t\t</div>\n\t);\n\tconst classes = useStyles();\n\t// const {token} = React.useContext(AccountContext);\n\tconst [query, setQuery] = React.useContext(SearchContext);\n\tconst ListItems = () => {\n\t\tif (!queryArray) return;\n\t\tsetListItems(() => queryArray.map((value, index) => {\n\t\t\tif (!value) return;\n\t\t\treturn (\n\t\t\t\t<ListItem button key={index} onClick={() => {\n\t\t\t\t\tsetQuery(value.suggestion.attributes.data);\n\t\t\t\t}} component={Link} to={\"/search/results\"}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<SearchOutlined/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary={`${value.suggestion.attributes.data}`}/>\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t}));\n\t};\n\n\tconst Search = async (e) => {\n\t\tif (e.key === \"Enter\") return query ? history.push(\"/search/results\") : null;\n\t\tif (online) await SuggestSearch(e.target.value, abortController).then(v => v && v.length ? setQueryArray(v) : setQueryArray([])).catch(() => []);\n\t\telse await SuggestOfflineSongs(e.target.value).then(t => setQueryArray(t.map(t => ({suggestion: {attributes: {data: t.item.videoElement.snippet.title}}}))));\n\t\tListItems();\n\t\tprops.history.push({\n\t\t\tpathname: \"search\",\n\t\t\tsearch: \"?\" + new URLSearchParams({q: e.target.value}).toString()\n\t\t});\n\t\tsetQuery(e.target.value);\n\t};\n\n\tReact.useEffect(() => () => abortController.abort(), []);\n\treturn (\n\t\t<div className=\"SearchComponent\">\n\t\t\t<Dialog fullScreen open={open} TransitionComponent={Transition}>\n\t\t\t\t<AppBar className={\"fixed-top\"}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t{window.history ? <IconButton onClick={() => {\n\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t}} component={Link} to={\"/home\"} color=\"primary.light\" visibility={false}>\n\t\t\t\t\t\t\t<ArrowBack style={{color: \"#FFF\"}}/>\n\t\t\t\t\t\t</IconButton> : null}\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\t// autoCapitalize={true}\n\t\t\t\t\t\t\t// autoComplete={true}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tonKeyUp={Search}\n\t\t\t\t\t\t\tclassName={`${classes.input} text-light`}\n\t\t\t\t\t\t\tplaceholder=\"Search Yebr\"\n\t\t\t\t\t\t\tinputProps={{\"aria-label\": \"Search Yebr\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className=\"container px-3\" style={{marginTop: \"4rem\"}}>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{listItems}\n\t\t\t\t\t\t{listItems ? null : <Preloader/>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\nSearchComponent.propTypes = {};\nSearchComponent.defaultProps = {};\n\nexport default React.memo(SearchComponent);\n"
  ],
  "sourceRoot": ""
}
