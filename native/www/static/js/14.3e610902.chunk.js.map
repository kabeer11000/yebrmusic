{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/icons/esm/PlayCircleOutline.js",
    "../node_modules/@material-ui/icons/esm/Pause.js",
    "../node_modules/@material-ui/icons/esm/OpenInNew.js",
    "../node_modules/@material-ui/icons/esm/Close.js",
    "components/Player/CustomMiniPlayerSlider.js",
    "components/Player/MiniPlayer/MiniPlayer.js"
  ],
  "names": [
    "createSvgIcon",
    "React",
    "createElement",
    "d",
    "CustomMiniPlayerSlider",
    "playState",
    "useContext",
    "PlayContext",
    "useState",
    "audioElement",
    "currentTime",
    "scrubbing",
    "setScrubbing",
    "useEffect",
    "ontimeupdate",
    "Slider",
    "className",
    "defaultValue",
    "value",
    "min",
    "color",
    "max",
    "duration",
    "onChange",
    "i",
    "v",
    "isFinite",
    "memo",
    "styles",
    "position",
    "top",
    "left",
    "transform",
    "withRouter",
    "history",
    "setPlayState",
    "PlayerContext",
    "playerState",
    "setPlayerState",
    "MiniPlayer",
    "tv",
    "isTvContext",
    "cutCurrentSongState",
    "a",
    "pause",
    "src",
    "Dialog",
    "playList",
    "videoElement",
    "document",
    "title",
    "Song",
    "others",
    "offline",
    "paused",
    "playing",
    "setPlaying",
    "pauseAudio",
    "playAudio",
    "play",
    "ReOpenDialog",
    "bottomNav",
    "includes",
    "location",
    "pathname",
    "Slide",
    "in",
    "direction",
    "AppBar",
    "style",
    "bottom",
    "maxWidth",
    "maxHeight",
    "component",
    "elevation",
    "Card",
    "width",
    "height",
    "borderRadius",
    "variant",
    "CardActionArea",
    "disableRipple",
    "Fragment",
    "IconButton",
    "right",
    "onClick",
    "Close",
    "PlayCircleOutline",
    "Pause",
    "CardMedia",
    "alt",
    "snippet",
    "image",
    "thumbnails",
    "high",
    "url",
    "loading",
    "onError",
    "e",
    "target",
    "onerror",
    "marginTop",
    "CardContent",
    "List",
    "ListItem",
    "ListItemText",
    "primary",
    "Typography",
    "gutterBottom",
    "secondary",
    "textDecoration",
    "Link",
    "to",
    "channelId",
    "channelTitle",
    "ListItemSecondaryAction",
    "hidden",
    "OpenInNew"
  ],
  "mappings": "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",
  "file": "static/js/14.3e610902.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'OpenInNew');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');",
    "import React, {useEffect} from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {PlayContext} from \"../../Contexts\";\n\nconst CustomMiniPlayerSlider = () => {\n\tconst {playState} = React.useContext(PlayContext);\n\tconst [scrubbing, setScrubbing] = React.useState(playState.audioElement.currentTime || 0);\n\n\tuseEffect(() => {\n\t\tplayState.audioElement.ontimeupdate = () => setScrubbing(playState.audioElement.currentTime);\n\t\treturn () => {\n\t\t\tplayState.audioElement.ontimeupdate = null;\n\t\t};\n\t}, []);\n\n\tconst handleScrubbing = (i, v) => {\n\t\tif (!isFinite(v)) return;\n\t\tsetScrubbing(v);\n\t\tplayState.audioElement.currentTime = v;\n\t};\n\n\treturn <Slider\n\t\tclassName={\"p-0 m-0\"}\n\t\tdefaultValue={0}\n\t\tvalue={scrubbing}\n\t\tmin={0.0}\n\t\tcolor={\"primary\"}\n\t\tmax={playState.audioElement.duration}\n\t\tonChange={handleScrubbing}\n\t/>;\n};\nexport default React.memo(CustomMiniPlayerSlider);\n",
    "import {AppBar, IconButton, Typography} from \"@material-ui/core\";\nimport {Close, OpenInNew, Pause, PlayCircleOutline} from \"@material-ui/icons\";\nimport React from \"react\";\nimport CustomMiniPlayerSlider from \"../CustomMiniPlayerSlider\";\nimport Card from \"@material-ui/core/Card\";\nimport {FocusNode} from \"@please/lrud\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Link from \"@material-ui/core/Link\";\nimport {isTvContext, PlayContext, PlayerContext} from \"../../../Contexts\";\nimport Slide from \"@material-ui/core/Slide\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport List from \"@material-ui/core/List\";\nimport {withRouter} from \"react-router-dom\";\n\nconst styles = {\n\tTVPlayButton: {\n\t\tposition: \"absolute\",\n\t\ttop: \"35%\",\n\t\tleft: \"50%\",\n\t\ttransform: \"translate(-50%, -50%)\"\n\t}\n};\nconst MiniPlayer = ({history}) => {\n\tconst {playState, setPlayState} = React.useContext(PlayContext);\n\tconst [playerState, setPlayerState] = React.useContext(PlayerContext);\n\tif (!playerState.MiniPlayer) return null;\n\n\tconst tv = React.useContext(isTvContext);\n\tconst cutCurrentSongState = async () => {\n\t\tplayState.audioElement.pause();\n\t\tplayState.audioElement.src = \"#\";\n\t\tsetPlayerState({\n\t\t\tDialog: false,\n\t\t\tMiniPlayer: false\n\t\t});\n\t\tsetPlayState({\n\t\t\t...playState,\n\t\t\tplayList: null,\n\t\t\tvideoElement: null,\n\t\t});\n\t\tdocument.title = \"Yebr Music\";\n\t\t// if (localStorage.getItem(storageIndex.currentlyCasting)) await sendPauseCast(localStorage.getItem(storageIndex.castingTo));\n\t};\n\tconst Song = playState.others.offline ? playState.videoElement.videoElement : playState.videoElement;\n\tconst [playing, setPlaying] = React.useState(playState.audioElement.paused);\n\n\tconst pauseAudio = () => {\n\t\tplayState.audioElement.pause();\n\t\tsetPlaying(true);\n\t};\n\tconst playAudio = () => {\n\t\tplayState.audioElement.play();\n\t\tsetPlaying(false);\n\t};\n\tconst ReOpenDialog = () => setPlayerState({\n\t\tDialog: true,\n\t\tMiniPlayer: false\n\t});\n\tconst bottomNav = ![\"/settings\", \"/artist\"].includes(history.location.pathname);\n\n\treturn tv ?\n\t\t<Slide in={playerState.MiniPlayer} direction={\"top\"}>\n\t\t\t<AppBar\n\t\t\t\tcolor={\"slideDown primary.miniPlayer.main\"} style={{\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: \"auto\",\n\t\t\t\tbottom: \"0\",\n\t\t\t\tmaxWidth: \"25rem\",\n\t\t\t\tmaxHeight: \"17rem\",\n\t\t\t}} component={\"div\"} elevation={1} className={\"d-inline-flex KabeersMiniPlayerContainer\"}>\n\t\t\t\t<Card className={\"SongCard\"} style={{width: \"100%\", height: \"100%\", borderRadius: 0}}\n\t\t\t\t\t  variant={\"elevation\"}\n\t\t\t\t\t  elevation={3}>\n\t\t\t\t\t<FocusNode>\n\t\t\t\t\t\t<CardActionArea disableRipple>\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton style={{position: \"absolute\", right: \"0.25rem\", top: \"0.25rem\"}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={cutCurrentSongState}><Close/></IconButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tplaying ?\n\t\t\t\t\t\t\t\t\t\t<IconButton style={{...styles.TVPlayButton}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={playAudio}><PlayCircleOutline\n\t\t\t\t\t\t\t\t\t\t\tcolor={\"#fff\"}/></IconButton> :\n\t\t\t\t\t\t\t\t\t\t<IconButton style={{...styles.TVPlayButton}} onClick={pauseAudio}>\n\t\t\t\t\t\t\t\t\t\t\t<Pause color={\"#fff\"}/></IconButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\tclassName={\"-rounded-circle\"}\n\t\t\t\t\t\t\t\t\tcomponent={\"img\"}\n\t\t\t\t\t\t\t\t\talt={Song.snippet.title}\n\t\t\t\t\t\t\t\t\timage={Song.snippet.thumbnails.high.url}\n\t\t\t\t\t\t\t\t\ttitle={Song.snippet.title}\n\t\t\t\t\t\t\t\t\tloading={\"lazy\"}\n\t\t\t\t\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\t\t\t\t\te.target.src = \"./assets/icons/darkmode_nothingfound.svg\"; // \"https://cdn.jsdelivr.net/gh/kabeer11000/docs-hosted@yebrmusic-assets/broken_image_black_24dp.svg\";\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstyle={{height: \"11rem\", width: \"100%\"}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div style={{width: \"100%\", position: \"absolute\", marginTop: \"-0.56rem\"}}>\n\t\t\t\t\t\t\t\t\t<CustomMiniPlayerSlider/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t<CardContent onClick={ReOpenDialog} className={\"text-left\"}>\n\t\t\t\t\t\t\t\t<List className={\"p-0 m-0\"}>\n\t\t\t\t\t\t\t\t\t<ListItem className={\"p-0 m-0\"}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText className={\"p-0 m-0 text-truncate  w-100\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  primary={<Typography gutterBottom variant=\"h6\" component=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   className={\"text-truncate\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {Song.snippet.title}</Typography>} secondary={\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{textDecoration: \"none\"}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/artist/${Song.snippet.channelId}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"text-truncate\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*{playState.videoElement.snippet.channelTitle}*/}\n\t\t\t\t\t\t\t\t\t\t\t\t{/*{playState.videoElement.snippet.description ? playState.videoElement.snippet.description.slice(0, 70) + \" ...\" : \"\"}*/}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={\"text-muted\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Song.snippet.channelTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</Typography>}/>\n\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction hidden>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew/>\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t</FocusNode>\n\t\t\t\t</Card>\n\t\t\t</AppBar>\n\t\t</Slide>\n\t\t:\n\t\t<Slide in={playerState.MiniPlayer} direction={\"bottom\"}>\n\t\t\t<AppBar\n\t\t\t\tcolor={\"slideDown primary.miniPlayer.main\"} style={{\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: \"auto\",\n\t\t\t\tbottom: bottomNav ? \"3.5rem\" : 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t}} component={\"div\"} elevation={1} className={\"d-inline-flex KabeersMiniPlayerContainer\"}>\n\t\t\t\t<div className={\"d-inline-flex\"}>\n\t\t\t\t\t<div onClick={ReOpenDialog} className={\"d-inline-flex\"}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\t\t\te.target.src = \"./assets/icons/darkmode_nothingfound.svg\"; // \"https://cdn.jsdelivr.net/gh/kabeer11000/docs-hosted@yebrmusic-assets/broken_image_black_24dp.svg\";\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsrc={Song.snippet.thumbnails.high.url} style={{\n\t\t\t\t\t\t\twidth: \"4rem\",\n\t\t\t\t\t\t\theight: \"3rem\",\n\t\t\t\t\t\t\tmaxWidth: \"6rem!important\",\n\t\t\t\t\t\t\tmaxHeight: \"4rem!important\"\n\t\t\t\t\t\t}} alt={Song.snippet.title} className={\"KabeersMiniPlayerImage\"}\n\t\t\t\t\t\t\tloading={\"lazy\"}/>\n\t\t\t\t\t\t<Typography component={\"span\"} className={\"text-truncate p-2 KabeersMiniPlayerText\"} style={{\n\t\t\t\t\t\t\twidth: \"10em\",\n\t\t\t\t\t\t\tcolor: \"primary.miniPlayer.text\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{Song.snippet.title || \"Untitled\"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={\"float-right ml-auto\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplaying ? <IconButton onClick={playAudio}><PlayCircleOutline\n\t\t\t\t\t\t\t\t\tcolor={\"#fff\"}/></IconButton> :\n\t\t\t\t\t\t\t\t<IconButton onClick={pauseAudio}><Pause color={\"#fff\"}/></IconButton>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<IconButton onClick={cutCurrentSongState}><Close/></IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<CustomMiniPlayerSlider/>\n\t\t\t</AppBar>\n\t\t</Slide>;\n};\n\nexport default React.memo(withRouter(MiniPlayer));\n"
  ],
  "sourceRoot": ""
}
