{
  "version": 3,
  "sources": [
    "components/DeleteDownloadDialog.js",
    "../node_modules/@material-ui/icons/esm/Delete.js",
    "components/Downloads/DownloadListItem.js",
    "../node_modules/@material-ui/icons/esm/OfflinePin.js",
    "components/Downloads/Downloads.js"
  ],
  "names": [
    "DialogBody",
    "Song",
    "className",
    "variant",
    "style",
    "width",
    "height",
    "src",
    "snippet",
    "thumbnails",
    "high",
    "url",
    "alt",
    "Strings",
    "createSvgIcon",
    "React",
    "createElement",
    "d",
    "useStyles",
    "makeStyles",
    "inline",
    "display",
    "DownloadListItem",
    "song",
    "onClick",
    "onMouseLeave",
    "Fragment",
    "ListItem",
    "button",
    "alignItems",
    "ListItemAvatar",
    "Avatar",
    "videoElement",
    "title",
    "ListItemText",
    "primary",
    "secondary",
    "channelTitle",
    "tags",
    "length",
    "map",
    "v",
    "i",
    "Chip",
    "key",
    "label",
    "IconButton",
    "Delete",
    "Divider",
    "component",
    "defaultProps",
    "memo",
    "theme",
    "root",
    "maxWidth",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "Downloads",
    "classes",
    "dialog",
    "useDialog",
    "useState",
    "songs",
    "setSongs",
    "PlaySong",
    "useContext",
    "PlayContext",
    "tv",
    "isTvContext",
    "deleteDownload",
    "data",
    "a",
    "confirm",
    "message",
    "then",
    "deleteDownloadedSong",
    "id",
    "downloadsToPlaylist",
    "useEffect",
    "marginTop",
    "color",
    "Container",
    "fixed",
    "Grow",
    "in",
    "items",
    "List",
    "Grid",
    "container",
    "spacing",
    "index",
    "item",
    "md",
    "xl",
    "useProxy",
    "songURI",
    "URL",
    "createObjectURL",
    "blobs",
    "audio",
    "others",
    "offline",
    "playList",
    "list",
    "OfflinePin",
    "opacity",
    "position",
    "top",
    "left",
    "transform",
    "Typography"
  ],
  "mappings": "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",
  "file": "static/js/16.b6fb9d6a.chunk.js",
  "sourcesContent": [
    "import {Avatar} from \"@material-ui/core\";\nimport React from \"react\";\nimport Strings from \"../Strings\";\n\nexport const DialogBody = ({Song}) => (\n\t<div className={\"k-dialog-body-inner\"}>\n\t\t<div className={\"d-flex justify-content-center mb-3\"}>\n\t\t\t<Avatar variant={\"rounded\"} style={{\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"auto\"\n\t\t\t}} src={Song.snippet.thumbnails.high.url} alt={\"Song Thumbnail\"}/>\n\t\t</div>\n\t\t{Strings[\"Utils:Downloads:DeleteDownload.Body\"](Song)}\n\t</div> || Strings[\"Utils:NothingHere\"]\n);\n",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');",
    "import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete} from \"@material-ui/icons\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles(() => ({\n\tinline: {\n\t\tdisplay: \"inline\",\n\t},\n}));\nconst DownloadListItem = ({song, onClick, onMouseLeave}) => {\n\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ListItem button alignItems=\"flex-start\" className={\"mx-0 px-0\"}>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<ListItemAvatar onClick={onClick}>\n\t\t\t\t\t\t<Avatar variant=\"rounded\" alt={song.videoElement.snippet.title}\n\t\t\t\t\t\t\t\tsrc={song.videoElement.snippet.thumbnails.high.url}/>\n\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t<ListItemText\n\t\t\t\t\t\tprimary={<div className={\"text-truncate\"}>{song.videoElement.snippet.title}</div>}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={\"text-truncate\"}>\n\t\t\t\t\t\t\t\t\t{song.videoElement.snippet.channelTitle}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsong.tags && song.tags.length ? <div className={\"cardSlider Slider\"}>\n\t\t\t\t\t\t\t\t\t\t{song.tags.map((v, i) => <Chip className={\"mx-1\"} key={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   label={v}/>)}\n\t\t\t\t\t\t\t\t\t</div> : null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t\t<IconButton onClick={onMouseLeave}>\n\t\t\t\t\t<Delete/>\n\t\t\t\t</IconButton>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" component=\"li\"/>\n\t\t</React.Fragment>\n\t);\n};\n\nDownloadListItem.propTypes = {\n\tonMouseLeave: PropTypes.func.isRequired,\n\tonClick: PropTypes.func.isRequired,\n\tsong: PropTypes.object.isRequired\n};\n\nDownloadListItem.defaultProps = {};\n\nexport default React.memo(DownloadListItem);\n",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z\"\n}), 'OfflinePin');",
    "import React from \"react\";\nimport \"./Downloads.css\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport List from \"@material-ui/core/List\";\nimport {deleteDownloadedSong, downloadsToPlaylist} from \"../../functions/SongsUtility\";\nimport DownloadListItem from \"./DownloadListItem\";\nimport Container from \"@material-ui/core/Container\";\nimport {useDialog} from \"muibox\";\n// import PropTypes from \"prop-types\";\nimport Grow from \"@material-ui/core/Grow\";\n// import {pure} from \"recompose\";\nimport {isTvContext, PlayContext} from \"../../Contexts\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {OfflinePin} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Strings from \"../../Strings\";\nimport {DialogBody} from \"../DeleteDownloadDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\tmaxWidth: \"100%\",\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t},\n}));\n\n\nconst Downloads = () => {\n\tconst classes = useStyles();\n\tconst dialog = useDialog();\n\tconst [songs, setSongs] = React.useState(null);\n\tconst {PlaySong} = React.useContext(PlayContext);\n\tconst tv = React.useContext(isTvContext);\n\n\tconst deleteDownload = async (data) => {\n\t\tdialog.confirm({\n\t\t\ttitle: <div\n\t\t\t\tclassName={\"k-dialog-body-title text-truncate\"}>{Strings[\"Utils:Downloads:DeleteDownload.Title\"]}</div> || Strings[\"Utils:NothingHere\"],\n\t\t\tmessage: <DialogBody Song={data.videoElement}/>,\n\t\t}).then(async () => {\n\t\t\tawait deleteDownloadedSong(data.id);\n\t\t\tsetSongs(await downloadsToPlaylist());\n\t\t});\n\t};\n\tReact.useEffect(() => {\n\t\tdownloadsToPlaylist().then(setSongs);\n\t}, []);\n\n\treturn (\n\t\t<div className={\"KabeersDownloadContainer mb-5\"} style={{marginTop: \"5rem\"}} color={\"primary.dark\"}>\n\t\t\t<Container fixed>\n\t\t\t\t<Grow in={true}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ListItemText primary={\"Downloads\"} secondary={\"Songs you downloaded\"}/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsongs && songs.items.length ? (\n\t\t\t\t\t\t\t\t<List className={`${classes.root} mt-0 bg-transparent`}>\n\t\t\t\t\t\t\t\t\t<Grid container spacing={tv ? 2 : 0}>\n\t\t\t\t\t\t\t\t\t\t{songs.items.map((song, index) => <Grid className={\"w-100\"} item md={6} xl={6}>\n\t\t\t\t\t\t\t\t\t\t\t<DownloadListItem\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => deleteDownload(song)}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => PlaySong({\n\t\t\t\t\t\t\t\t\t\t\t\t\tuseProxy: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsongURI: URL.createObjectURL(song.blobs.audio),\n\t\t\t\t\t\t\t\t\t\t\t\t\tsong: song,\n\t\t\t\t\t\t\t\t\t\t\t\t\tothers: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toffline: true\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tplayList: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist: songs // {...songs, items: songs.items.map(a => a.videoElement)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t})} className={\"text-truncate\"} song={song}/>\n\t\t\t\t\t\t\t\t\t\t</Grid>)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Container style={{\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\theight: \"100%\"\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<IconButton className={\"w-100 mt-5 h-100 NoDownloadsIndicator\"}>\n\t\t\t\t\t\t\t\t\t\t<OfflinePin style={{\n\t\t\t\t\t\t\t\t\t\t\twidth: \"10rem\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"10rem\",\n\t\t\t\t\t\t\t\t\t\t\topacity: \"20%\",\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\t\t\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\t\t\t\t\t\t\ttransform: \"translate(-50%, -50%)\"\n\t\t\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t<Typography className={\"text-center\"}>Songs you download will appear\n\t\t\t\t\t\t\t\t\t\there!</Typography>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</Grow>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nDownloads.propTypes = {};\n\nDownloads.defaultProps = {};\n\nexport default React.memo(Downloads);\n"
  ],
  "sourceRoot": ""
}
