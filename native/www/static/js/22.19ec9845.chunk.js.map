{
  "version": 3,
  "sources": [
    "components/SongCard2/SongCard2.js"
  ],
  "names": [
    "SongCard2",
    "props",
    "str",
    "video_",
    "video",
    "snippet",
    "className",
    "disableRipple",
    "style",
    "width",
    "backgroundColor",
    "maxWidth",
    "elevation",
    "onClick",
    "onPlay",
    "component",
    "alt",
    "title",
    "height",
    "maxHeight",
    "objectFit",
    "onError",
    "e",
    "target",
    "onerror",
    "src",
    "image",
    "thumbnail",
    "thumbnails",
    "high",
    "url",
    "replace",
    "loading",
    "hidden",
    "playlist",
    "position",
    "opacity",
    "top",
    "display",
    "color",
    "bottom",
    "right",
    "marginLeft",
    "gutterBottom",
    "variant",
    "primary",
    "slice",
    "secondary",
    "channelTitle",
    "defaultProps",
    "React",
    "memo"
  ],
  "mappings": "yHAAA,mHAcMA,EAAY,SAACC,GAClB,IAFiBC,EAEXC,EAASF,EAAMG,MAAMC,QAC3B,OAEC,wBAAC,IAAD,CAAMC,UAAW,WAAYC,eAAa,EACvCC,MAAO,CACNC,MAAO,OAAQC,gBAAiB,cAChCC,SAAU,QAEXC,UAAW,EACXC,QAASZ,EAAMa,QACjB,wBAAC,IAAD,KACC,wBAAC,IAAD,KACC,wBAAC,IAAD,CAAMR,UAAW,aAChB,wBAAC,IAAD,KACC,wBAAC,IAAD,CACCS,UAAW,MACXC,IAAKb,EAAOc,MACZT,MAAO,CACNU,OAAQ,OACRT,MAAO,OACPU,UAAW,OACXR,SAAU,OACVS,UAAW,SAMZC,QAAS,SAACC,GACTA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOE,IAAM,4CAEhBC,MAAOzB,EAAM0B,WAAaxB,EAAOyB,WAAWC,KAAKC,IACjDb,OAnCUf,EAmCMC,EAAOc,MAnCLf,EAAI6B,QAAQ,SAAU,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,QAAS,MAoCpFC,QAAS,WAIZ,+BAAKC,QAAShC,EAAMiC,SAAU1B,MAAO,CACpC2B,SAAU,WACVzB,gBAAiB,UACjB0B,QAAS,MACTlB,OAAQ,OACRT,MAAO,OACP4B,IAAK,EACLC,QAAUrC,EAAMiC,SAAoB,QAAT,UAE5B,wBAAC,IAAD,CAAYK,MAAO,UAAWN,QAAShC,EAAMiC,SAAU1B,MAAO,CAC7D2B,SAAU,WACVK,OAAQ,SACRC,MAAO,SACPH,QAAUrC,EAAMiC,SAAoB,QAAT,SAE3B,wBAAC,IAAD,CAAY1B,MAAO,CAAC+B,MAAO,YAG7B,wBAAC,IAAD,CAAajC,UAAW,iBAAkBE,MAAO,CAChDkC,WAAY,UAEZ,wBAAC,IAAD,CAAYC,cAAY,EAACC,QAAQ,KAAK7B,UAAU,IAAIT,UAAW,iBAC9D,wBAAC,IAAD,CACCuC,QAAS,+BAAKvC,UAAW,iBAAkBH,EAAOc,MAAM6B,MAAM,EAAG,IAAM,QACvEC,UAAW5C,EAAO6C,oBAmBzBhD,EAAUiD,aAAe,GAEVC,oBAAMC,KAAKnD",
  "file": "static/js/22.19ec9845.chunk.js",
  "sourcesContent": [
    "import React from \"react\";\nimport \"./SongCard2.css\";\n// import Grow from \"@material-ui/core/Grow\";\nimport Card from \"@material-ui/core/Card\";\nimport {FocusNode} from \"@please/lrud\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {IconButton, Typography} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {QueueMusic} from \"@material-ui/icons\";\n\nconst unEntity = (str) => str.replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\nconst SongCard2 = (props) => {\n\tconst video_ = props.video.snippet;\n\treturn (\n\t\t// <Grow in={true}>\n\t\t<Card className={\"SongCard\"} disableRipple\n\t\t\t  style={{\n\t\t\t\t  width: \"100%\", backgroundColor: \"transparent\", /*maxWidth: \"12rem\"*/\n\t\t\t\t  maxWidth: \"auto\",\n\t\t\t  }}\n\t\t\t  elevation={0}\n\t\t\t  onClick={props.onPlay}>\n\t\t\t<FocusNode>\n\t\t\t\t<CardActionArea>\n\t\t\t\t\t<Card className={\"py-0 my-0\"}>\n\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\tcomponent={\"img\"}\n\t\t\t\t\t\t\t\talt={video_.title}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\tmaxHeight: \"auto\",\n\t\t\t\t\t\t\t\t\tmaxWidth: \"auto\",\n\t\t\t\t\t\t\t\t\tobjectFit: \"cover\"\n\t\t\t\t\t\t\t\t\t// resize:\"both\",\n\t\t\t\t\t\t\t\t\t// objectFit: \"contain\"\n\t\t\t\t\t\t\t\t\t// maxWidth: \"12rem\",\n\t\t\t\t\t\t\t\t\t// maxHeight: \"12rem\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\t\t\t\te.target.src = \"./assets/icons/darkmode_nothingfound.svg\";\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\timage={props.thumbnail || video_.thumbnails.high.url}\n\t\t\t\t\t\t\t\ttitle={unEntity(video_.title)}\n\t\t\t\t\t\t\t\tloading={\"lazy\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<div hidden={!props.playlist} style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbackgroundColor: \"#000000\",\n\t\t\t\t\t\topacity: \"30%\",\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t\t}}/>\n\t\t\t\t\t<IconButton color={\"#FFFFFF\"} hidden={!props.playlist} style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbottom: \"0.5rem\",\n\t\t\t\t\t\tright: \"0.5rem\",\n\t\t\t\t\t\tdisplay: !props.playlist ? \"none\" : \"block\"\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<QueueMusic style={{color: \"#FFF\"}}/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</CardActionArea>\n\t\t\t\t<CardContent className={\"text-left pt-0\"} style={{\n\t\t\t\t\tmarginLeft: \"-1rem\",\n\t\t\t\t}}>\n\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"p\" className={\"text-truncate\"}>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tprimary={<div className={\"text-truncate\"}>{video_.title.slice(0, 70) + \" ...\"}</div>}\n\t\t\t\t\t\t\tsecondary={video_.channelTitle}/>\n\t\t\t\t\t\t{/*{video_.title.slice(0, 70) + \" ...\"}*/}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/*<Typography variant=\"body2\" color=\"textSecondary\" style={{textDecoration: \"none\"}}*/}\n\t\t\t\t\t{/*\t\t\tcomponent={Link} to={`/artist?id=${video_.channelId}`}*/}\n\t\t\t\t\t{/*\t\t\tclassName={\"text-truncate\"}>*/}\n\t\t\t\t\t{/*\t/!*{video_.description ? video_.description.slice(0, 70) + \" ...\" : \"\"}*!/*/}\n\t\t\t\t\t{/*\t<span className={\"text-muted text-truncate\"}>*/}\n\t\t\t\t\t{/*\t\t{video_.channelTitle}*/}\n\t\t\t\t\t{/*\t</span>*/}\n\t\t\t\t\t{/*</Typography>*/}\n\t\t\t\t</CardContent>\n\t\t\t</FocusNode>\n\t\t</Card>\n\t\t// </Grow>\n\t);\n};\nSongCard2.propTypes = {};\n\nSongCard2.defaultProps = {};\n\nexport default React.memo(SongCard2);\n"
  ],
  "sourceRoot": ""
}
